// <auto-generated />
using System;
using Api_Oficina.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api_Oficina.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20241004162657_Criacao-Iniial")]
    partial class CriacaoIniial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Api_Oficina.Models.Cadastropecas", b =>
                {
                    b.Property<int>("CadastropecasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CadastropecasId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CadastropecasId"));

                    b.Property<string>("Nomepeca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nomepeca");

                    b.Property<string>("Tipopeca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Tipopeca");

                    b.Property<int>("Valorpeca")
                        .HasColumnType("int")
                        .HasColumnName("Valorpeca");

                    b.HasKey("CadastropecasId");

                    b.ToTable("CadastropecasId");
                });

            modelBuilder.Entity("Api_Oficina.Models.Cadastrovendedor", b =>
                {
                    b.Property<int>("CadastrovendedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CadastrovendedorId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CadastrovendedorId"));

                    b.Property<int>("Cpfvendedor")
                        .HasColumnType("int")
                        .HasColumnName("Cpfvendedor");

                    b.Property<DateTime>("Datanascimentovendedor")
                        .HasColumnType("datetime2")
                        .HasColumnName("Datanascimentovendedor");

                    b.Property<string>("Emailvendedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Emailvendedor");

                    b.Property<string>("Nomevendedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nomevendedor");

                    b.HasKey("CadastrovendedorId");

                    b.ToTable("CadastrovendedorId");
                });

            modelBuilder.Entity("Api_Oficina.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClienteId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<int>("CpfCliente")
                        .HasColumnType("int")
                        .HasColumnName("CpfCliente");

                    b.Property<DateTime>("Datadenacimentocliente")
                        .HasColumnType("datetime2")
                        .HasColumnName("Datadenacimentocliente");

                    b.Property<string>("EmailCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EmailCliente");

                    b.Property<string>("Nomecliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nomecliente");

                    b.Property<int>("PremiumId")
                        .HasColumnType("int");

                    b.Property<int>("TelefoneCliente")
                        .HasColumnType("int")
                        .HasColumnName("TelefoneCliente");

                    b.HasKey("ClienteId");

                    b.HasIndex("PremiumId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Api_Oficina.Models.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PedidoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoId"));

                    b.Property<int>("CadastrovendedorId")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Dadosdopedido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Dadosdopedido");

                    b.Property<DateTime>("Datadopedido")
                        .HasColumnType("datetime2")
                        .HasColumnName("Datadopedido");

                    b.HasKey("PedidoId");

                    b.HasIndex("CadastrovendedorId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("Api_Oficina.Models.Pedidopeca", b =>
                {
                    b.Property<int>("PedidopecaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PedidopecaId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidopecaId"));

                    b.Property<int>("CadastropecasId")
                        .HasColumnType("int");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.HasKey("PedidopecaId");

                    b.HasIndex("CadastropecasId");

                    b.HasIndex("PedidoId");

                    b.ToTable("Pedidopeca");
                });

            modelBuilder.Entity("Api_Oficina.Models.Premium", b =>
                {
                    b.Property<int>("PremiumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PremiumId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PremiumId"));

                    b.Property<int>("Descontodopremium")
                        .HasColumnType("int")
                        .HasColumnName("Descontodopremium");

                    b.Property<string>("Tipodepremium")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Tipodepremium");

                    b.HasKey("PremiumId");

                    b.ToTable("Premium");
                });

            modelBuilder.Entity("Api_Oficina.Models.Cliente", b =>
                {
                    b.HasOne("Api_Oficina.Models.Premium", "Premium")
                        .WithMany()
                        .HasForeignKey("PremiumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Premium");
                });

            modelBuilder.Entity("Api_Oficina.Models.Pedido", b =>
                {
                    b.HasOne("Api_Oficina.Models.Cadastrovendedor", "Cadastrovendedor")
                        .WithMany()
                        .HasForeignKey("CadastrovendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_Oficina.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cadastrovendedor");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Api_Oficina.Models.Pedidopeca", b =>
                {
                    b.HasOne("Api_Oficina.Models.Cadastropecas", "Cadastropecas")
                        .WithMany()
                        .HasForeignKey("CadastropecasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_Oficina.Models.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cadastropecas");

                    b.Navigation("Pedido");
                });
#pragma warning restore 612, 618
        }
    }
}
